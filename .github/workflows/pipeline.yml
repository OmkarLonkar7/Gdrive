name: Build Android APK

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Check initial disk usage
      - name: Check available disk space after cleanup
        run: df -h

      # Step 3: Define Version Manually
      - name: Set Version Manually
        run: echo "VERSION=0.0.1" >> $GITHUB_ENV

      # Step 4: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      # Step 5: Set up JDK for Android builds
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"

      # Step 6: Install dependencies
      - name: Install dependencies
        run: yarn

      # Step 7: Load assets for the Android build
      - name: Load assets
        run: |
          npx react-native bundle \
          --platform android \
          --dev false \
          --entry-file index.js \
          --bundle-output android/app/src/main/assets/index.android.bundle \
          --assets-dest android/app/src/main/res

      # Step 8: Build APKs for different environments
      - name: Build Dev APK
        run: |
          cd android
          ./gradlew assembleDevRelease

        # Step 9: Upload APK as a build artifact (optional)
      - name: Upload APK as a build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-release.apk
          path: android/app/build/outputs/apk/dev/release/app-dev-release.apk

      # Step 10: Upload APK to Google Drive
      - name: Upload APK to Google Drive
        run: |
          # Download and extract the gdrive CLI tool
          wget -q https://github.com/prasmussen/gdrive/releases/download/2.1.1/gdrive_2.1.1_linux_386.tar.gz
          tar -xvzf gdrive_2.1.1_linux_386.tar.gz
          chmod +x gdrive
          mv gdrive /usr/local/bin/

          # Define the location where we want to save the credentials file
          CREDENTIALS_PATH="/home/runner/.gdrive/tmp/credentials.json"
          CREDENTIALS_PATH2="tmp/credentials.json"

          # Write the service account JSON key to the defined location using printf
          mkdir -p $(dirname $CREDENTIALS_PATH)
          echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}" | jq . > $CREDENTIALS_PATH

          # Ensure the file has proper permissions (readable)
          chmod 600 $CREDENTIALS_PATH

          # Check if the file exists and report the file size, name, and location
          if [ -f $CREDENTIALS_PATH ]; then
            echo "Service account key file created successfully."
            echo "File name: $(basename $CREDENTIALS_PATH)"
            echo "File location: $CREDENTIALS_PATH"
            echo "Absolute path: $(realpath $CREDENTIALS_PATH)"
            echo "File size: $(stat -c %s $CREDENTIALS_PATH) bytes"
            echo "File content:"
            cat $CREDENTIALS_PATH
           else
              echo "Error: Service account key file was not created."
              exit 1
            fi

          # Authenticate with Google Drive using the service account
          gdrive about --service-account $CREDENTIALS_PATH2
